<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title>foobuzz</title>
	<link href="http://foobuzz.github.io" rel="alternate"></link>
	<link href="http://foobuzz.github.io/feed" rel="self"></link>
	<updated>2015-12-04</updated>
	<id>urn:uuid:f38f868c-f9e6-4401-8119-e4ef9777aee6</id>
	
		<entry>
			<title>The np problem, Reddit edition</title>
			<link href="http://foobuzz.github.io/reddit-np"/>
			<id>urn:uuid:3f739db6-2d48-52ab-bcd9-5486b3019903</id>
			<author>
				<name>Valentin</name>
			</author>
			<updated>2015-12-04</updated>
			<summary type="html">

&lt;p&gt;Have you ever been redirected to a so-called read-only version of Reddit? That&#39;s a thing. For example, check out &lt;a href=&#34;https://np.reddit.com/r/books&#34;&gt;np.reddit.com/r/books&lt;/a&gt;. No voting arrows, no button to comment even when logged in, and a little message at the top of the subreddit: &#34;You have been linked to a read-only version of this subreddit. Please respect the community by not voting.&#34; All because the little &lt;code&gt;np&lt;/code&gt; (&#34;No Participation&#34;) subdomain was used. Now if you try the same thing with /r/askreddit: &lt;a href=&#34;np.reddit.com/r/askreddit&#34;&gt;np.reddit.com/r/askreddit&lt;/a&gt;, everything is absolutely normal, no difference with the regular Reddit. Quite strange, isn&#39;t it. It doesn&#39;t stop there. For example, &lt;a href=&#34;https://sf.reddit.com/r/teenagers/&#34;&gt;sf.reddit.com/r/teenagers&lt;/a&gt; displays only the self-post of the subreddit, because of the &lt;code&gt;sf&lt;/code&gt; (SelF-posts) subdomain. But that only works for /r/teenagers. So, what the well?&lt;/p&gt;
&lt;h2&gt;How Reddit subdomains work&lt;/h2&gt;
&lt;p&gt;One good thing about reddit is that it&#39;s open-source. So one can inspect &lt;a href=&#34;https://github.com/reddit/reddit/blob/master/r2/r2/config/middleware.py#L201-L239&#34;&gt;the code related to subdomains handling&lt;/a&gt; to understand how it works. I did read the code, and this is what I discovered.&lt;/p&gt;
&lt;p&gt;Reddit accepts subdomains that indicates the language with which the site should be displayed. What&#39;s interesting is that Reddit doesn&#39;t have a predefined list of strings that are accepted as a language subdomain, but uses a regular expression instead: &lt;code&gt;\A\w\w(-\w\w)?\Z&lt;/code&gt;. So, basically, any sequence of two alphanumerical characters, optionally followed by a dash and another such sequence is accepted. For example, &lt;code&gt;zz&lt;/code&gt; or &lt;code&gt;an-42&lt;/code&gt; are valid language subdomains, even though they correspond to no language code in the &lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes&#34;&gt;ISO 639-1 specification&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What does Reddit do with such code? Well, for some real languages such as French (&lt;code&gt;fr&lt;/code&gt;) or Japanese (&lt;code&gt;ja&lt;/code&gt;), the web interface is actually translated into the language. For the more esoteric codes that I invented in the paragraph above, it does nothing to the interface. However, for any given code, it performs one thing: in the HTML of the web page, it sets the value of the &lt;code&gt;lang&lt;/code&gt; attribute of the &lt;code&gt;html&lt;/code&gt; root tag to the code provided. So, when you browse to &lt;a href=&#34;https://an-42.reddit.com/&#34;&gt;an-42.reddit.com&lt;/a&gt;, the HTML source of the page starts with:&lt;/p&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre class=&#34;source&#34;&gt;&lt;code&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;http://www.w3.org/1999/xhtml&#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;lang=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;an-42&#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xml:lang=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;an-42&#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Using and abusing CSS&lt;/h2&gt;
&lt;p&gt;On Reddit, despite doing the hard and benevolent work of maintaining subreddits, moderators have only access to quite rudimentary tools. Actually the improvement of moderator tools is always brought to the table when the admins risk themselves into asking the community for feedback. This issue was critical when last summer reddit let go the employee in charge of the relations between the moderators of /r/IamA and the celebrities doing interviews, all without warning the moderators, generating a &lt;a href=&#34;http://www.dailydot.com/news/reddit-revolt-blackout-2015-ama-victoria/&#34;&gt;massive reddit-wide drama&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Anyway, it&#39;s a matter of fact that there are no moderator tools to customize the user experience depending on the subdomain used, nor tools to add custom modules or text areas anywhere in the subreddit page. However, the moderators have access to one thing: they can edit the CSS stylesheet used to render the subreddit. And that&#39;s the key to everything. CSS is like editing in film-making; no matter what material you have, you can transform it into whatever you want. CSS is power.&lt;/p&gt;
&lt;p&gt;The basic idea is that if you prefix some CSS rules with the &lt;code&gt;body:lang(np)&lt;/code&gt; selector, the rule will only apply to pages whose &lt;code&gt;html&lt;/code&gt; tag have their &lt;code&gt;lang&lt;/code&gt; attribute set to &lt;code&gt;np&lt;/code&gt;. So, as a Reddit moderator, you can effectively define rules for specific subdomains. You can then use the power of CSS to fully customize the page for this subdomain. You can, especially, make things disappear using the &lt;code&gt;display: none&lt;/code&gt; property:&lt;/p&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre class=&#34;source&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;usertext&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;edit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;sidebox&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;submit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;commentingAs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;markdownEditor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; 
&lt;span class=&#34;n&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;onclick&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;return reply(this)&#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;],&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;helplink&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;none&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;important&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Additionally, you can make new things appear using the &lt;code&gt;content&lt;/code&gt; CSS property coupled with the &lt;code&gt;:before&lt;/code&gt; or &lt;code&gt;:after&lt;/code&gt; selector:&lt;/p&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre class=&#34;source&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;siteTable&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;before&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;You have been linked to a read-only version of this subreddit. Please respect the community by not voting.&#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;block&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;800&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;F6E69F&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;margin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;305&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;solid&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;orange&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;small&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A drawback of adding content using this method is that the inserted text is not selectable. This can be frustrating from a user-experience point of view.&lt;/p&gt;
&lt;p&gt;The code snippets provided above come from the actual stylesheet provided by the /r/NoParticipation subreddit, which is dedicated to instruct moderators on how to &#34;install&#34; the &#34;No Participation mode&#34; on their own subreddits. In the next part, I explain how such a subreddit was born and why moderators would want to add a &#34;No Participation mode&#34; to their subreddit.&lt;/p&gt;
&lt;h2&gt;Combating cross-subreddit contamination with the No Participation mode&lt;/h2&gt;
&lt;p&gt;There are such things known as the &lt;em&gt;meta&lt;/em&gt; subreddits. On such subreddits, users share links and comment about what happen on Reddit. For example, /r/BestOf is for comments which are awesome in some way and which constitutes the &#34;best of&#34; Reddit. /r/ThreadKillers is for comments which answer a question or a request in such a comprehensive way that any additional comment from other users is not necessary. /r/DepthHub is for comments which answer a question in depth. /r/SubredditDrama is for following flame-wars going on Reddit.&lt;/p&gt;
&lt;p&gt;The subreddits these meta-subreddits link to sometimes are little subreddits or even &lt;em&gt;niche&lt;/em&gt; subreddits, for example dedicated to specific hobbies. The problem is that meta-subreddits&#39; users, instead of just being spectators of what&#39;s happening on Reddit, would sometimes go on and enter the show, voting on comments of the thread linked, posting comments themselves and so on. On top of disrupting the normal flow of upvotes and downvotes and disrespect the explicit and implicit submission guidelines of the subreddits they were showing up in, users would sometimes perform &lt;em&gt;vote brigading&lt;/em&gt;, that is, massively downvoting a opinion they disagree with so that it would be buried in the abyss of the comments and become invisible.&lt;/p&gt;
&lt;p&gt;To combat this problem, redditor /u/KortoloB had an idea. He figured out the technical elements explained in the previous part and wrote a &#34;no participation&#34; stylesheet dedicated to the &lt;code&gt;np&lt;/code&gt; subdomain. This is the stylesheet which contain the snippets presented in the previous part. He created the subreddit &lt;a href=&#34;https://www.reddit.com/r/noparticipation&#34;&gt;/r/NoParticipation&lt;/a&gt; to host and support his idea. He abstracted the technical working of the stylesheet into what he calls the &lt;em&gt;No Participation mode&lt;/em&gt; and wrote instruction on how to install the No Participation mode on one&#39;s subreddit (basically instructing to copy and paste the stylesheet).&lt;/p&gt;
&lt;p&gt;To make /u/KortoloB&#39;s idea work reddit-wide, there were two additional conditions: that regular subreddits install the No Participation Mode, and that the meta subreddits&#39; submissions point to the No Participation mode of other subreddits. I don&#39;t know the exact time-line of events, but as of today, the NP mode is deployed on a lot of subreddits and the system works pretty well. &lt;a href=&#34;https://www.reddit.com/r/NoParticipation/wiki/userlist&#34;&gt;This page&lt;/a&gt; lists all the subreddits that have No Participation installed, as well as meta-subreddits that instruct users to only post links pointing to the NP version of a subreddit, some of them requiring it (i.e. removing posts that don&#39;t respect the rule).&lt;/p&gt;
&lt;h2&gt;Reaction of the community and of the reddit staff&lt;/h2&gt;
&lt;p&gt;My impression as a regular redditor is that the No Participation thing caused and is still causing a lot of confusion in the Reddit community.&lt;/p&gt;
&lt;p&gt;Most redditors know that moderators tools a quite limited and seeing voting arrows disappearing depending on the subdomain in the URL gives them the impression that the No Participation mode must be some kind of official Reddit feature. Furthermore, to even more discourage users to participate in the No Participation mode, some moderators launched the rumor that removing the &lt;code&gt;np&lt;/code&gt; subdomain and reloading the page to participate would result in them being banned. However, moderators have no way to detect such behavior and admins have nothing to do with the No Participation mode. Technically, you don&#39;t even have to reload the page to participate, but just to disable the styles defined by the moderators. Since Reddit delivers the moderator stylesheet as a separate CSS file upon a client request, it&#39;s fairly easy with any browser&#39;s development tools to disable only the moderators styles.&lt;/p&gt;
&lt;p&gt;When confused users would ask in several threads what the hell the No Participation mode was, some would answer by only giving a few bullet points about what this mode changed, in a tone that would validate the false idea that it&#39;s an official reddit feature. Some other would accurately explain that it&#39;s nothing more than a hack from the moderators that exploit the &lt;code&gt;np&lt;/code&gt; language subdomain. Some would let think that moderators have a direct tool to customize a subreddit depending on the language, not clarifying that elements of the page are still there but just hidden. Fortunately, some other would accurately explain that it&#39;s a CSS hack.&lt;/p&gt;
&lt;p&gt;A rumor that became popular is that the &lt;code&gt;np&lt;/code&gt; language subdomain is for the Nepalese version of Reddit. In fact, the Nepalese language code is &lt;code&gt;ne&lt;/code&gt;, not &lt;code&gt;np&lt;/code&gt; (the &lt;em&gt;location&lt;/em&gt; code of Nepal is &lt;code&gt;NP&lt;/code&gt;, but Reddit&#39;s subdomain are not made for locations code). Furthermore, as explained in the first part of this article, Reddit accept any combination of two letters as the language subdomain. &lt;code&gt;np&lt;/code&gt; corresponds to no language according to the ISO standard.&lt;/p&gt;
&lt;p&gt;In the &lt;a href=&#34;https://www.reddit.com/r/blog/comments/2c63wg/how_reddit_works&#34;&gt;2014 thread&lt;/a&gt; about the Reddit official blogpost &lt;em&gt;How reddit works&lt;/em&gt;, when a user asked about the No Participation mode, the admin /u/cupcake1713 &lt;a href=&#34;https://www.reddit.com/r/blog/comments/2c63wg/how_reddit_works/cjcbsda?context=1&#34;&gt;clarified&lt;/a&gt; that it wasn&#39;t actually something from the Reddit staff and called it a &#34;crappy CSS hack&#34; (and stroke the &#34;crappy&#34; out later, probably by remorse after No Participation creator answered to her comment and said being a little bit affected that his idea was denigrated so much by the admins). She also pointed out that the admins realized quite recently (relatively to the date of her comment) that the NP stylesheet was hiding the &#34;report&#34; button on submissions (a button to report abuse), that this was a &#34;huge problem&#34; and that if the staff would have spotted this problem sooner they would have stop the spread of this thing. The no participation stylesheet is since fixed and doesn&#39;t hide the report button.&lt;/p&gt;
&lt;p&gt;Since then, other subreddits have customized other subdomains for other purposes (cf. &lt;code&gt;sf&lt;/code&gt; on /r/teenagers for showing only self-posts). Last summer, admins said that they&#39;ll deploy better moderation tools by 2016. My bet is that it won&#39;t include any non-participation related stuff. It&#39;s too easy to override and it probably wouldn&#39;t scale well. I just want moderators to be able to add custom text boxes in the page without CSS so that the text is selectable. There&#39;s something deeply wrong with non-selectable text.&lt;/p&gt;</summary>
			
				<category term="reddit"></category>
			
		</entry>
	
		<entry>
			<title>Datetime in Python</title>
			<link href="http://foobuzz.github.io/datetime-python"/>
			<id>urn:uuid:230550b3-4c8e-5f32-8c51-fd3701edf457</id>
			<author>
				<name>Valentin</name>
			</author>
			<updated>2015-11-25</updated>
			<summary type="html">

&lt;p&gt;Last Friday I spent two hours fighting with the datetime class from Python&#39;s datetime module. I originally thought that a datetime object represented a single point in time, which is not always the case. I sum up with a few bullets points what I learned about this module:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;In its simplest form, a datetime object is just a date and a time as you would write it down on a piece of paper. It&#39;s a year, a month, a day, and, optionally, an hour, a minute, a second and some microseconds (the &#39;time&#39; part of &#39;datetime&#39;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;So, in this simplest form, a datetime object does not represent a given point in time because it depends on the timezone in which you consider your date and time. It&#39;s up to interpretation. Such datetime objects are called &lt;em&gt;naive&lt;/em&gt;. You can make a datetime object &lt;em&gt;aware&lt;/em&gt; by giving to it the timezone that should be used to interpret this date and time. An &lt;em&gt;aware&lt;/em&gt; datetime object does represent a given point in time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The optionnal timezone carried by a datetime object is given by the &lt;code&gt;tzinfo&lt;/code&gt; attribute, whose value is of type &lt;code&gt;tzinfo&lt;/code&gt;. The tzinfo class is an abstract base class, meaning you can&#39;t directly instanciate a tzinfo object. You must instanciate a subclass of tzinfo, such as &lt;code&gt;timezone&lt;/code&gt;. But to construct a timezone object, you must give it a &lt;code&gt;timedelta&lt;/code&gt; object. The timedelta class represents a difference between two datetimes. When used to construct a timezone, it indicates the offset in relation to UTC. For example, &lt;code&gt;timezone(timedelta(hours=2))&lt;/code&gt; is a valid tzinfo object which represents the timezone UTC+2. &lt;code&gt;timezone.utc&lt;/code&gt; is a shortcut for &lt;code&gt;timezone(timedelta(0))&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Most methods which return a datetime object return a &lt;em&gt;naive&lt;/em&gt; object. The method &lt;code&gt;now&lt;/code&gt; returns the local and naive date and time; the method &lt;code&gt;utcnow&lt;/code&gt; returns the UTC naive date and time. Since Python 3.2, the &lt;code&gt;strptime&lt;/code&gt; method can produce an aware datetime object from a string. The string must contain the timezone in the &lt;code&gt;+HHMM&lt;/code&gt; or &lt;code&gt;-HHMM&lt;/code&gt; format (for example &lt;code&gt;+0200&lt;/code&gt; for UTC+2), and the placeholder to use is &lt;code&gt;%z&lt;/code&gt; to capture the timezone part.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Practical example&lt;/h2&gt;
&lt;p&gt;Let&#39;s say you&#39;ve acquired such a string representating a date and a time: &lt;code&gt;Mon Nov 23 20:06:13 CET 2015&lt;/code&gt;. It&#39;s actually the default output&#39;s format of the &lt;code&gt;date&lt;/code&gt; command in bash. Let&#39;s say you want to write a Python script that tells you the exact time difference between the moment the script is executed and the date and time represented by this string.&lt;/p&gt;
&lt;p&gt;We&#39;re in bad luck here because Python won&#39;t be able to tell us to what timezone &lt;code&gt;CET&lt;/code&gt; corresponds to. Remember, it can only parse timezones if they&#39;re in the form &lt;code&gt;+HHMM&lt;/code&gt;. So we need to do some basic research. It turns out that CET stands for Central European Time and is UTC+1.&lt;/p&gt;
&lt;p&gt;Now that we have such knowledge, a solution is to replace &lt;code&gt;CET&lt;/code&gt; by &lt;code&gt;+0100&lt;/code&gt; in the string then let Python produces an aware datetime object.&lt;/p&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre class=&#34;source&#34;&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;datetime&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timedelta&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timezone&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;DATETIME_STRING&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#39;Mon Nov 23 20:06:13 CET 2015&#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DATETIME_STRING&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#39;CET&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#39;+0100&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;dt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strptime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&#39;%a %b &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; %H:%M:%S %z %Y&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, we need the current time. There are two functions to get the current time: &lt;code&gt;now&lt;/code&gt; or &lt;code&gt;utcnow&lt;/code&gt;. The problem with &lt;code&gt;now&lt;/code&gt; is that it returns the current local time. So we would need to figure out what is the local timezone, which isn&#39;t straightforward (more on that later). &lt;code&gt;utcnow&lt;/code&gt; returns the UTC time, so we know the timezone by definition. Note that even if we know the timezone, &lt;code&gt;utcnow&lt;/code&gt; still returns a &lt;em&gt;naive&lt;/em&gt; object, so we&#39;ll have to manually set the timezone to UTC:&lt;/p&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre class=&#34;source&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utcnow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tzinfo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timezone&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;# Getting an aware datetime object&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can now subtract the two datetime objects to obtain a timedelta object, which has the fancy &lt;code&gt;seconds&lt;/code&gt; attribute:&lt;/p&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre class=&#34;source&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;delta&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;now&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dt&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;delta&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;seconds&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;# Prints the timespan in seconds between dt and now&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Getting the local timezone&lt;/h2&gt;
&lt;p&gt;In the last part, another strategy would have been to use the &lt;code&gt;now&lt;/code&gt; to obtain the local time and then set the local timezone to the datetime object obtained. But getting the local timezone isn&#39;t easy. I haven&#39;t found any function in the documentation doing that, and posts on the subject on StackOverflow advice using the &lt;code&gt;tzlocal&lt;/code&gt; module, which isn&#39;t present in the standard library.&lt;/p&gt;
&lt;p&gt;It&#39;s still possible with the vanilla datetime module.&lt;/p&gt;
&lt;p&gt;First, a solution that would work sometimes:&lt;/p&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre class=&#34;source&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;diff&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utcnow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;minutes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;round&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;diff&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;seconds&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;local_timezone&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timezone&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timedelta&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;minutes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;minutes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here we get the timezone as the difference between &lt;code&gt;now&lt;/code&gt; and &lt;code&gt;utcnow&lt;/code&gt;. But since the two functions are not executed at the exact same time, the difference doesn&#39;t produce a timedelta object with a whole number of minutes, which is the condition for a timedelta to be used to construct a timezone. We get a whole number of minutes by rounding the number of seconds divided by 60. Then we construct a timezone thanks to a new timedelta.&lt;/p&gt;
&lt;p&gt;Now imagine that this code runs on a &lt;em&gt;very&lt;/em&gt; slow computer and more than a minute is gone between the execution of the two functions, and you&#39;ve got a corrupted timezone. So, it doesn&#39;t really work.&lt;/p&gt;
&lt;p&gt;To make it work we can use a timestamp. Python can parse POSIX timestamp into datetime objects. We can use &lt;code&gt;fromtimestamp&lt;/code&gt; to get the local datetime from a timestamp and &lt;code&gt;utcfromtimestamp&lt;/code&gt; to get the UTC datetime from the same timestamp, then substract the two, which, this time, will represent the exact same instant:&lt;/p&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre class=&#34;source&#34;&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;TIMESTAMP&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;42&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;dt_utc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;utcfromtimestamp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TIMESTAMP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;dt_local&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fromtimestamp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TIMESTAMP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;diff&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dt_local&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dt_utc&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;local_timezone&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;timezone&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;diff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Well, to be perfectly honnest, I&#39;m still not absolutely convinced that this would work 100% of the time. Depending on the implementation of the &lt;code&gt;fromtimestamps&lt;/code&gt; methods, there may exist edge cases causing trouble some times. I don&#39;t know. At the end of the day, the true way to get the timezone is to look at the operating system&#39;s specific configuration file containing such information, which is set by the user when it installs the operating system. This is what the &lt;code&gt;tzlocal&lt;/code&gt; module does by the way. Python probably does it too when it does anything UTC.&lt;/p&gt;</summary>
			
				<category term="programming"></category>
			
				<category term="python"></category>
			
		</entry>
	
		<entry>
			<title>Why Firefox was losing track of my history</title>
			<link href="http://foobuzz.github.io/firestory"/>
			<id>urn:uuid:7643553c-80e9-58ac-9f95-27bc1b22562c</id>
			<author>
				<name>Valentin</name>
			</author>
			<updated>2015-06-30</updated>
			<summary type="html">

&lt;p&gt;A few months ago I encrypted my Firefox profile. It contains my history, bookmarks and most importantly, authentification cookies that I keep for websites I find more conveniant to stay logged in. Those are things I prefer to be encrypted for obvious privacy and security reasons.&lt;/p&gt;
&lt;p&gt;The process of encrypting a Firefox profile goes as follow: first, you need to know where the profile is located in the disk. On Windows, it&#39;s a directory which sits at {User direcory}\AppData\Roaming\Mozilla\Firefox\Profiles\{the profile directory}. Then you need to use an encryption software such as TrueCrypt to put this directory in an encrypted container. Once you have this container, this is how a software like TrueCrypt works: when you open a container with it, it&#39;ll query you with the password and if you enter the correct one it&#39;ll &lt;em&gt;mount&lt;/em&gt; the container as if it was an external storage device. On Windows, this makes a new disk appear (you know like C: or D: or whatever) and all the content of the container becomes available at this disk. TrueCrypt lets you choose the letter of the disk on which you want to mount the container.&lt;/p&gt;
&lt;p&gt;In this case, the content of the container is a Firefox profile, so you have to tell Firefox how to access it once it&#39;s mounted. This can be done using the &lt;a href=&#34;https://support.mozilla.org/en-US/kb/profile-manager-create-and-remove-firefox-profiles&#34;&gt;Firefox profile manager&lt;/a&gt;. In fact Firefox let&#39;s you create an arbitrary number of profiles. A profile has a name, and a &lt;em&gt;path&lt;/em&gt; indicating where the actual profile directory is on the computer. Here, the strategy is to choose a letter by convention, which will be the letter of the drive onto which we&#39;re always going to mount the Firefox profile container. For example, we can take R:\ (I prefer letters at the end of the alphabets because Windows uses letters at the begining at the alphabet to automatically mount external devices). So we&#39;re gonna create a Firefox profile and set its path to R:\&lt;/p&gt;
&lt;p&gt;When all this set up is ready, when you want to browse Firefox, first you mount the profile container to R:\ and then you open Firefox with the corresponding profile. When you finish browsing, you close Firefox and you dismount the container. That is a dull process, so you can, like me, write some little batch script that&#39;ll make it almost transparent: it just asks me the password when I click on the Firefox icon and does the job of mounting before opening Firefox and dismounting when I close Firefox.&lt;/p&gt;
&lt;p&gt;This was not intented to be a tutorial on how to encrypt a Firefox profile, but just an introduction to the rest of this article. &lt;a href=&#34;https://nirklars.wordpress.com/2012/10/25/encrypt-firefox-thunderbird-profile-truecrypt/&#34;&gt;This is a step-by-step guide on how to encrypt a Firefox profile&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When you create a container, you need to indicate the size of the container. Before encryption, my profile weighted around 230 MB, so I figured that 500 MB was enough for the container. Well, in fact, Firefox had a little surprise for me.&lt;/p&gt;
&lt;p&gt;A few weeks after I had set up my encrypted profile, I noticed that Firefox was losing old history. I never delete my history. It goes (went) all the way to more than six months, actually all the way to when I started my computer for the first time. I was first alerted by auto-completion fails. Having a massive history lets Firefox performs some very helpful and comprehensive auto-completion magic in the address bar; but this time it wasn&#39;t even able to auto-complete &#34;reddit.com/r/askr&#34;. What the hell was going on. Then I discovered in the Library window that there was nothing more than &#34;This month&#34;. I was &lt;em&gt;mad&lt;/em&gt;. My data had disappeared.&lt;/p&gt;
&lt;p&gt;After some googling I found out why.&lt;/p&gt;
&lt;p&gt;It turns out that by default, Firefox delete old history based on some expiration criterias. &lt;a href=&#34;https://mxr.mozilla.org/mozilla-central/source/toolkit/components/places/nsPlacesExpiration.js&#34;&gt;This is the source code&lt;/a&gt; of the program doing this slanderous job.&lt;/p&gt;
&lt;p&gt;Look at this:&lt;/p&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre class=&#34;source&#34;&gt;&lt;code&gt;&lt;span class=&#34;c1&#34;&gt;// This percentage of disk size is used to protect against calculating a too&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// large database size on disks with tiny quota or available space.&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DATABASE_TO_DISK_PERC&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If there is not much space available on the disk, the history database can&#39;t take up more than 2% of this available space. My container has a size of 500 MB, but about 230 MB are already taken by other stuff (bookmarks, thumbnails, extensions, etc), so there&#39;s 270 MB actually available. So, the maximum size of the database was 5.4 MB. That&#39;s not much.&lt;/p&gt;
&lt;p&gt;Then there&#39;s this:&lt;/p&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre class=&#34;source&#34;&gt;&lt;code&gt;&lt;span class=&#34;c1&#34;&gt;// This is the average size in bytes of an URI entry in the database.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// Magic numbers are determined through analysis of the distribution of a ratio&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// between number of unique URIs and database size among our users.&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// Based on these values we evaluate how many unique URIs we can handle before&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// starting expiring some.&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;URIENTRY_AVG_SIZE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1600&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Firefox computes the maximum number of URIs it can hold in the database thanks to an average URI size, whose value is set to 1.6 KB. With 5.4 MB available, it means that you can store up to 3375 URIs. I don&#39;t know about you, but for me, that&#39;s about 15 days of browsing the web.&lt;/p&gt;
&lt;p&gt;So, this is why my history was only available for 2 weeks.&lt;/p&gt;
&lt;p&gt;The solution to this problem was quite easy. Actually all this hardware calculation for the maximum number of URIs is used only if the maximum size isn&#39;t set by the user. There&#39;s no regular settings menu to set this preference, I had to go in &lt;code&gt;about:config&lt;/code&gt;. According to &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/Places/Places_Expiration&#34;&gt;this&lt;/a&gt;, there should be 2 keys relative to the limit of URIs: &lt;code&gt;places.history.expiration.max_pages&lt;/code&gt; which can be set by the user to his convenience and &lt;code&gt;places.history.expiration.transient_current_max_pages&lt;/code&gt;, a read-only copy of the previous key destined to other components which would want to access this information. When I finally searched for the keys, only the read-only one was there (and its value was 3274, close but not equal to my estimation above, that&#39;s because I rounded the numbers). According to &lt;a href=&#34;http://www.tomshardware.co.uk/answers/id-2088014/firefox-configuration-issue.html&#34;&gt;this forum post&lt;/a&gt;, I simply could create a brand new key called &lt;code&gt;places.history.expiration.max_pages&lt;/code&gt; and do my business with it. Which I did, setting its value to one fucking million. I was glad to see that its twin key immediatly updated itself with the new value, indicating that it worked.&lt;/p&gt;</summary>
			
				<category term="software"></category>
			
				<category term="data"></category>
			
		</entry>
	
</feed>